version: "3.9"

volumes:
  papel_db:
    name: papel_db

services:

  nginx:
    image: nginx
    container_name: papel_nginx
    volumes:
      - ./setup/nginx/papel_docker.conf:/etc/nginx/nginx.conf:ro
      - ./setup/nginx/certificate.conf:/etc/nginx/certificate.conf:ro
      - ./setup/nginx/app_docker.conf:/etc/nginx/sites-enabled/app_docker.conf:ro
      - ./setup/nginx/monitor_docker.conf:/etc/nginx/sites-enabled/monitor_docker.conf:ro
      - ./logs/nginx:/var/log/nginx
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api_prod

  db:
    container_name: papel_postgres
    build:
      context: .
      dockerfile: setup/postgres/Dockerfile
    restart: always
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - papel_db:/var/lib/postgresql/data

  celery:
    container_name: papel_celery
    build:
      context: .
      dockerfile: setup/celery/Dockerfile
    image: celery_app_img
    volumes:
      - ./logs/celery:/opt/celery_app/logs
#    env_file:
#      - setup/app/.env
    environment:
#      APP_BASE_URL: "${APP_BASE_URL}"
#      APP_PORT: "${APP_PORT}"
      CELERY_BROKER_URL: "${CELERY_BROKER_URL}"
      CELERY_RESULT_BACKEND: "${CELERY_RESULT_BACKEND}"
      DB_NAME: "${DB_NAME}"
      DB_USER: "${DB_USER}"
      DB_PASSWORD: "${DB_PASSWORD}"
    depends_on:
      - rabbitmq

  rabbitmq:
    container_name: papel_rabbitmq
    image: rabbitmq:3.8-management
    restart: on-failure
    ports:
      - "5672:5672"
      - "15672:15672"
