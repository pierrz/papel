upstream app_server { # bind to api_prod container
    server api_prod:8000 fail_timeout=0;
}


upstream image_server { # bind to cantaloupe container
    server cantaloupe:8182 fail_timeout=0;
}


server { # api_prod server
    # use 'listen 80 deferred;' for Linux
    server_name kibana.muzz.app;
    client_max_body_size 4G;
    keepalive_timeout 5;
    add_header 'Content-Security-Policy' 'upgrade-insecure-requests';
    # add_header Access-Control-Allow-Origin *;
    # path for static files
    # root /opt/app/static;

    access_log   /var/log/nginx/brif.access.log combined;
    error_log	/var/log/nginx/brif.error.log warn;

    location / {
          # checks for static file, if not found proxy to app
          try_files $uri @proxy_to_app;
    }

    location @proxy_to_app {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass http://app_server;
    }

    #error_page 500 502 503 504 /500.html;
    #location = /500.html {
    #  root /path/to/app/current/public;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/muzz.app/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/muzz.app/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server { # cantaloupe server
    # use 'listen 80 deferred;' for Linux
    server_name cantaloupe.muzz.app;
    client_max_body_size 4G;
    keepalive_timeout 5;

    location / {
       # checks for static file, if not found proxy to app
       try_files $uri @proxy_to_img;
    }
    large_client_header_buffers 4 32k;

    location @proxy_to_img {
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_pass http://image_server;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/muzz.app/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/muzz.app/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = kibana.muzz.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name kibana.muzz.app;
    listen 80;
    return 404; # managed by Certbot
}


server {
    if ($host = cantaloupe.muzz.app) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    server_name cantaloupe.muzz.app;
    listen 80;
    return 404; # managed by Certbot
}
